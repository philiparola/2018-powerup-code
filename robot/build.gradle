buildscript {
    ext.kotlin_version = '1.1.51'
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    id "java"
    id "idea"
    id "jaci.openrio.gradle.GradleRIO" version "2017.10.30"
}

apply plugin: 'java-library-distribution'
apply plugin: 'kotlin'
apply plugin: 'idea'

def TEAM = 2898
def ROBOT_CLASS = "com.team2898.robot.Robot"

deploy {
    targets {
        target("roborio", jaci.openrio.gradle.frc.RoboRIO) {
            addresses << '10.28.98.2' 
            team = 2898
        }
    }
    artifacts {
        artifact('frcJava', jaci.openrio.gradle.frc.FRCJavaArtifact) {
            targets << "roborio"
        }
    }
}

repositories {
    jcenter()
    mavenCentral()
    maven {
        url "https://mymavenrepo.com/repo/npwFirwj5T45fGRctu9R/"
    }
}

configurations.all {
    resolutionStrategy {
        cacheDynamicVersionsFor 0, "seconds"
        cacheChangingModulesFor 0, "seconds"
    }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre8"
    compile 'org.jetbrains.kotlinx:kotlinx-coroutines-core:0.19.3'

    compile "org.apache.commons:commons-math3:3.6"
    compile "org.apache.commons:commons-lang3:3.6"

    compile 'com.google.guava:guava:21.0'
    compile 'com.google.code.gson:gson:2.8.0'
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:1.1.4-3"


    compile 'com.fasterxml.jackson.core:jackson-databind:2.8.9'
    compile 'com.fasterxml.jackson.module:jackson-module-kotlin:2.8.9'
    compile 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.8.9'
    compile 'org.jetbrains.kotlinx:kotlinx-coroutines-core:0.19.1'


    // compile group: "com.team2898", name: "engine", version: "0.1"
    // compile group: "com.team2898", name: "engine", version: "0.1", changing: true
    // compile group: "com.team2898", name: "engine", version: "+", changing: true
    // compile("com.team2898:engine:0.1") { changing = true }

    compile wpilib()
    compile ctre()
    compile navx()

    // compile fileTree(dir: 'libs', include: '**/*.jar')
    // nativeLib fileTree(dir: 'libs', include: '**/*.so')
}

kotlin {
    experimental {
        coroutines 'enable'
    }
}

jar {
    from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    manifest jaci.openrio.gradle.GradleRIOPlugin.javaManifest(ROBOT_CLASS)
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.2.1'
}

sourceSets {
    main.kotlin.srcDirs += 'src/main/kotlin'
}
